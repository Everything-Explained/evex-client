doctype html

html
  head
    title= logs
    link(href='https://fonts.googleapis.com/icon?family=Material+Icons' rel='stylesheet')
    link(rel='stylesheet' href='https://cdnjs.cloudflare.com/ajax/libs/materialize/0.97.7/css/materialize.min.css')
    link(rel='stylesheet' href='static/logger/logger.css')
    script(src='https://code.jquery.com/jquery-2.1.1.min.js')
    script(src='https://cdnjs.cloudflare.com/ajax/libs/materialize/0.97.7/js/materialize.min.js')
    script(src='static/libs/web.js')
    script(src='../libs/live.js')
    script.
      W = Web;

  body
    section#MainContent(v-bind:class='{"ready": isVueReady }')
      div#modal1.modal
        div.modal-content
          div.content-container
            header
              h5 {{ logEntryData.time }}
              h5.uid {{ logEntryData.uid }}
            div.row
              div.col.col1.method-label.material-icons label
              div.col.col2.value {{ logEntryData.rawMethod }}
            div.row(v-if='logEntryData.fields')
              div.col.col1.body-label.material-icons label
              div.col.col2.value Fields
                div.row.field-table(v-for='(key, val) in logEntryData.fields')
                  div.col.col4 {{ key }}
                  div.col.col4 {{ val }}
              div.col.
            div.row
              div.col.col1.material-icons(class='{{ logEntryData.msgLabelClass }}') label
              div.col.col2(class='{{ logEntryData.msgValueClass }}') {{ logEntryData.msg }}
        div.modal-footer
          a.modal-action.modal-close.waves-effect.waves-green.btn-flat(href='#!') Close



      div#container
        div.input-field
          select#SelectFile.deep-purple-text.text-darken-1(v-el:select onchange='vm.$get("onLogChange")()')
            each val in logs
              if val == 'noumenae.one'
                options(selected)= val
              else
                option= val

          label Available Logs
        div.input-field.number
          label Length
          input.deep-purple-text.text-darken-1(
              type='number' min='10' max='1020' v-model='userLength' step='20')
        div.input-field.number
          label Multiplier
          input.deep-purple-text.text-darken-1(
              type='number' min='1' max='10' v-model='multiplier' step='1')
        div.div-field
          label Actual Length
          span.pink-text.text-accent-2 {{ logLength }}
        div.div-field.req-length.green-text.text-darken-1
          label Req Length
          span(v-text='reqLength')

        div#content(v-el:content)
          div(v-for='log in logLines'
              track-by='uid'
              class='{{* log.classes }} log'
              v-on:mousedown='showLogEntry(log)')
            span.time {{* log.time }}
            span.identity {{* log.identity }}
            span.method(v-if='log.method') {{* log.method }}
            span.data(v-if='log.dataString') {{* log.dataString }}
            span.msg {{* log.msg }}

        button.waves-effect.waves-light.deep-purple.lighten-1.btn(
          v-bind:class='{ "orange": isLogPolling, "darken-1": isLogPolling}'
          v-on:click='toggleLogPolling($event)') {{ pollingText }}
        button.waves-effect.waves-light.red.darken-1.btn(v-on:click='deleteLog' v-el:btnDelete) Delete
        div.div-field.time.div-field-relative.green-text.text-darken-1
          label Render Time
          span {{ renderTime }}

    script(src='https://cdnjs.cloudflare.com/ajax/libs/vue/1.0.13/vue.min.js')
    script(src='static/logger/v-logger.js')

