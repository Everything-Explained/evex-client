
- var hisChildren = "<em>Isn't it about time we started acting like His children?</em>";
- var rules = "<a href='#/rules'>Rules</a>";
- var faq = "<a href='#/faq'>FAQ</a>";
- var email = "<span id='Email' mousedown.delegate='decode($event)'>Click Here</span>";
- var noumenae = "<a href='#/faq/noumenon'>Here</a>"
template
  section.optiscroll-content(class='${router.isNavigating ? "hidden" : "visible"}')
    article.home.optiscroll-content.au-animate(role='about')
      p.
       Welcome home! Noumenae seeks to enlighten itself, as well as its members. Everyone
       needs a break from the senseless monotony of life. We are all looking for that one place
       where we can be ourselves with reckless abandon. Wouldn't it be nice to discuss life
       issues, religion, spirituality, and philosophy in an open, loving enviornment? Noumenae
       would like to embody these discussions through the intimacy of its members, to create
       an enduring family.

      p.
       In order to provide this kind of atmosphere, free from the trolling and childishness
       that goes on with other social networks (we won't site sites), 3 things need to be
       instantiated. Firstly, the Sabbath (Saturday) needs to be understood or at least accepted
       as the Fathers chosen day for His and our rest. Secondly, this site is invite only. !{email}
       for my email and don't hesitate to ask me anything on your mind about the site. Lastly,
       and I think most importantly, to love our Father in heaven is the greatest gift we can
       bring to the discussions. To love Him, means to hold each other in reverence as he assuredly
       holds us.

      p.
       Obviously the last measure cannot be enforced, but it is by faith that if the first two
       requirements are met, the third will follow. Noumenae, comes from the word Noumenon which
       is in itself a discovery beyond our human congnition. This site was created out of a need
       for the Truth and an intimate relationship with the Father through His people. Check out a
       more in-depth analysis of the word Noumenon !{noumenae} and why it was chosen to represent
       this site.

      p.
       Let's create this enduring family together because we can't do it alone!


  div.cssload-container(if.bind='router.isNavigating')
    div.cssload-circle
    div.cssload-circle